---
// Credits for the starting point go to https://www.30secondsofcode.org/css/s/circular-progress-bar/
// Licensed under CC-BY-4.0
// https://creativecommons.org/licenses/by/4.0/

interface Props {
  fgColor?: string | undefined,
  bgColor?: string | undefined,
  size: number,
  progress: number,
}

const { fgColor, bgColor, size, progress } = Astro.props

---

<div class="relative" style={`width: ${size}px; height: ${size}px;`}>
  <div class="absolute top-0 left-0">
    <svg
      width={`${size}`} height={`${size}`} viewBox="0 0 250 250"
      class="circular-progress" style={`--progress: ${progress}`}
    >
      <circle class="bg"></circle>
      <circle class="fg"></circle>
    </svg>
  </div>
  <div class="absolute top-0 left-0 flex flex-col justify-center items-center w-full h-full">
    <div>
      <slot />
    </div>
  </div>
</div>

<style define:vars={{ 
  fgColor: fgColor,
  bgColor: bgColor,
}}>
.circular-progress {
  --size: 250px;
  --half-size: calc(var(--size) / 2);
  --stroke-width: 17px;
  --radius: calc((var(--size) - var(--stroke-width)) / 2);
  --circumference: calc(var(--radius) * pi * 2);
  --dash: calc((var(--progress) * var(--circumference)) / 100);
}

.circular-progress circle {
  cx: var(--half-size);
  cy: var(--half-size);
  r: var(--radius);
  stroke-width: var(--stroke-width);
  fill: none;
  stroke-linecap: round;
}

.circular-progress circle.bg {
  stroke: var(--bgColor, theme(colors.zinc.100));
}

.circular-progress circle.fg {
  transform: rotate(-90deg);
  transform-origin: var(--half-size) var(--half-size);
  stroke-dasharray: var(--dash) calc(var(--circumference) - var(--dash));
  transition: stroke-dasharray 0.3s linear 0s;
  stroke: var(--fgColor, theme(colors.zinc.800));
}
</style>