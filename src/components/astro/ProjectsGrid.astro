---
import { getEntries, type CollectionEntry } from "astro:content";
import type { ProjectGridStylesType } from "../../types";
// import { Image } from 'astro:assets';
// import { Icon } from "astro-icon/components";
import { getEntry } from "astro:content";
import { getCollection } from "astro:content";


interface Props {
  collection?: string;
  style: ProjectGridStylesType;
}

const { collection, style } = Astro.props;

let projectsList: CollectionEntry<'projects'>[] = []

if (collection) {
  const collectionData = await getEntry("project-collections", collection)
  projectsList = await getEntries<'projects'>(collectionData.data.projects)
} else {
  projectsList = (await getCollection('projects')).sort((a, b) => a.data.title.toLowerCase() > b.data.title.toLowerCase() ? 1 : -1);
}


let outermostContainerClasses: string[] = [
  "w-full"
];

let gridDivClasses = "container mx-auto flex flex-row flex-wrap justify-center p-1 md:p-2 lg:p-0"

let projectDivClasses = "w-full lg:w-1/2 aspect-[1.618] p-2 md:p-3 lg:p-2"

switch (style) {
  case "light":
    break;

  case "dark":
    outermostContainerClasses.push("bg-zinc-800");
    break;

  default:
    break;
}

---

<div class={outermostContainerClasses.join(" ")}>
  <div class={gridDivClasses}>

    {projectsList.map((project, index) => 
      // Each project entry
      <div class={projectDivClasses}>

        {/* The inner visual div (the actual card bit) */}
        <div class="w-full h-full relative rounded-[3.75px] overflow-hidden">

          {/* Background image */}
          <img class="object-cover object-center w-full h-full absolute" src={project.data.cover.image} alt={project.data.cover.alt} loading={index < 6 ? "eager" : "lazy"} />

          {/* Image overlay shadow div */}
          <div class="absolute bottom-0 left-0 w-full text-white bg-gradient-to-t from-[#00000080] h-1/3 p-4 md:p-5 flex flex-col-reverse">

            {/* Inner stack */}
            <div class="flex flex-row flex-wrap items-end gap-2">

              <div class="flex flex-row flex-wrap items-baseline gap-2 lg:gap-3 grow">

                {/* Project title */}
                <p class="text-2xl xl:text-3xl font-[475] xl:font-[400]">{project.data.title}</p>

                {/* Project slogan */}
                <p class="text-sm md:text-base ">{project.data.slogan}</p>

              </div>

              {/* Arrow button */}
              {/* <div class="hidden md:block">
                <div class="bg-white rounded-full w-12 aspect-square flex items-center justify-center">
                  <Icon name="ph:arrow-right" class="text-black text-[28px] pe-[1.5px]" />
                </div>
              </div> */}
            </div>
          </div>

          {/* Link overlay */}
          <a href={`/projects/${project.slug}/`} class="absolute w-full h-full z-0">
          </a>

        </div>
      </div>
    )}
  </div>
</div>
